import os
import re
import pandas as pd
import simplekml
import streamlit as st
from io import BytesIO
import tempfile
from datetime import datetime
import xml.etree.ElementTree as ET

# Set up page configuration with custom theme
st.set_page_config(
    page_title="Excel to KML Converter (NTSP)",
    page_icon="üó∫Ô∏è",
    layout="centered",
    initial_sidebar_state="collapsed"
)

# Custom CSS to enhance the UI
st.markdown("""
    <style>
    .main {
        padding: 2rem;
    }
    .stButton > button {
        width: 100%;
        border-radius: 10px;
        height: 3em;
        font-weight: 600;
    }
    .uploadedFile {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 1rem;
        margin: 1rem 0;
    }
    .stSelectbox {
        margin: 1rem 0;
    }
    .success-message {
        padding: 1rem;
        border-radius: 5px;
        background-color: #d4edda;
        color: #155724;
        margin: 1rem 0;
    }
    .error-message {
        padding: 1rem;
        border-radius: 5px;
        background-color: #f8d7da;
        color: #721c24;
        margin: 1rem 0;
    }
    </style>
""", unsafe_allow_html=True)

# Header section with logo and title
st.markdown("""
    <div style='text-align: center; margin-bottom: 2rem;'>
        <h1 style='color: #2c3e50;'>üó∫Ô∏è Excel to KML Converter</h1>
        <p style='color: #7f8c8d;'>‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå Excel ‡πÄ‡∏õ‡πá‡∏ô KML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô Google Earth</p>
    </div>
""", unsafe_allow_html=True)

# Create containers for better organization
upload_container = st.container()
settings_container = st.container()
progress_container = st.container()
download_container = st.container()

with upload_container:
    st.markdown("### üìÇ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå")
    uploaded_file = st.file_uploader(
        "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå Excel ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö .xlsx, .xls)",
        type=["xlsx", "xls"],
        help="‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏¥‡∏Å‡∏±‡∏î"
    )

if uploaded_file is not None:
    with settings_container:
        st.markdown("### ‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå")
        
        # Create two columns for settings
        col1, col2 = st.columns(2)
        
        with col1:
            # Sheet selection
            excel_data = pd.ExcelFile(uploaded_file)
            sheet_names = excel_data.sheet_names
            sheet_name = st.selectbox(
                "üìÑ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Sheet",
                sheet_names,
                help="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Sheet ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏¥‡∏Å‡∏±‡∏î"
            )

        with col2:
            # Point removal option
            remove_points = st.checkbox(
                "‚ùå ‡∏•‡∏ö‡∏´‡∏°‡∏∏‡∏î (Point)",
                help="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏´‡∏°‡∏∏‡∏î‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå KML"
            )

    with progress_container:
        status_text = st.empty()
        
        if st.button("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå", help="‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå"):
            with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•..."):
                try:
                    temp_file_path, output_filename, kml_bytes = convert_excel_to_kml(uploaded_file, sheet_name)
                    
                    if kml_bytes:
                        if remove_points:
                            try:
                                tree = ET.parse(temp_file_path)
                                root = tree.getroot()
                                for doc_or_folder in root.findall(".//kml:Document", namespace) + root.findall(".//kml:Folder", namespace):
                                    remove_point_placemarks(doc_or_folder)
                                output_kml = os.path.join(tempfile.gettempdir(), output_filename)
                                tree.write(output_kml, encoding="utf-8", xml_declaration=True)
                                with open(output_kml, "rb") as f:
                                    kml_bytes = BytesIO(f.read())
                                st.success("‚úÖ ‡∏•‡∏ö‡∏´‡∏°‡∏∏‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                            except Exception as e:
                                st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏∏‡∏î: {str(e)}")
                        
                        with download_container:
                            st.markdown("### üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå")
                            st.download_button(
                                label="‚¨áÔ∏è ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå KML",
                                data=kml_bytes,
                                file_name=output_filename,
                                mime="application/vnd.google-earth.kml+xml",
                                help="‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå KML"
                            )
                            
                            st.success("""
                            ‚úÖ ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!
                            \n- ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå KML
                            \n- ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏ß‡∏¢ Google Earth ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
                            """)
                            
                except Exception as e:
                    st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")
else:
    st.info("üìù ‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

# Footer
st.markdown("""
    <div style='text-align: center; margin-top: 2rem; padding: 1rem; background-color: #f8f9fa; border-radius: 5px;'>
        <p style='color: #6c757d; font-size: 0.9em;'>
            Made with ‚ù§Ô∏è by NTSP Team<br>
            <small>Version 1.0.0</small>
        </p>
    </div>
""", unsafe_allow_html=True)
