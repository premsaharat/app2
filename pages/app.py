import os
import re
import pandas as pd
import simplekml
import streamlit as st
from io import BytesIO
from datetime import datetime

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Regex
def parse_coordinates(coord_str):
    try:
        matches = re.findall(r"[-+]?\d*\.\d+|[-+]?\d+", coord_str)
        if len(matches) != 2:
            raise ValueError("Invalid coordinate format")
        lat, lon = map(float, matches)
        return lon, lat
    except Exception:
        return None

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á Excel ‡πÄ‡∏õ‡πá‡∏ô KML ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
def convert_excel_to_kml(uploaded_file, sheet_name, base_folder):
    try:
        status_text.text("üìå ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•...")

        # ‚úÖ ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel
        data = pd.read_excel(uploaded_file, sheet_name=sheet_name)

        # ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        data.columns = data.columns.str.strip()

        # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏¥‡∏Å‡∏±‡∏î
        data['‡∏û‡∏¥‡∏Å‡∏±‡∏î'] = data['‡∏û‡∏¥‡∏Å‡∏±‡∏î'].apply(lambda x: parse_coordinates(str(x)) if pd.notna(x) else None)
        data = data.dropna(subset=['‡∏û‡∏¥‡∏Å‡∏±‡∏î'])

        # ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° ID
        grouped = data.groupby('id')

        # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        save_folder = os.path.join(base_folder, f"KML_Output_{timestamp}")
        os.makedirs(save_folder, exist_ok=True)

        # ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        saved_files = []

        for device_id, group in grouped:
            kml = simplekml.Kml()
            coords = group.sort_values('‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î')['‡∏û‡∏¥‡∏Å‡∏±‡∏î'].tolist()

            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô (LineString)
            linestring = kml.newlinestring(name=f"{group['‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡∏∏‡∏°‡∏™‡∏≤‡∏¢'].iloc[0]} {device_id}")
            linestring.coords = coords
            linestring.style.linestyle.color = simplekml.Color.blue
            linestring.style.linestyle.width = 3

            # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô description
            description = "\n".join([f"{col}: {group[col].iloc[0]}" for col in data.columns if col != '‡∏û‡∏¥‡∏Å‡∏±‡∏î'])
            linestring.description = description

            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏∏‡∏î (Point) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏û‡∏¥‡∏Å‡∏±‡∏î
            for _, row in group.iterrows():
                point = kml.newpoint(name=f"‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà {row['‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î']}", coords=[row['‡∏û‡∏¥‡∏Å‡∏±‡∏î']])
                point.description = "\n".join([f"{col}: {row[col]}" for col in data.columns if col != '‡∏û‡∏¥‡∏Å‡∏±‡∏î'])
                point.style.iconstyle.color = simplekml.Color.red

            # ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå KML ‡∏•‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            kml_filename = os.path.join(save_folder, f"{device_id}.kml")
            kml.save(kml_filename)
            saved_files.append(kml_filename)

        status_text.text("‚úÖ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
        return save_folder, saved_files
    except Exception as e:
        status_text.text("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!")
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return None, None

# ‚úÖ ‡πÅ‡∏™‡∏î‡∏á UI ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ
st.set_page_config(page_title="Excel to KML Converter", layout="centered")
st.title("üìç Excel to KML Converter")

# üîπ **‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î**
uploaded_file = st.file_uploader("üìÇ **‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå Excel**", type=["xlsx", "xls"])

# üîπ **‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å**
base_folder = st.text_input("üìÅ **‡∏£‡∏∞‡∏ö‡∏∏‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå KML**", value=os.getcwd())

# üîπ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if uploaded_file is not None:
    try:
        # ‚úÖ ‡∏≠‡πà‡∏≤‡∏ô Excel ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠ Sheet
        excel_data = pd.ExcelFile(uploaded_file)
        sheet_names = excel_data.sheet_names
        sheet_name = st.selectbox("üìÑ **‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Sheet**", sheet_names)

        # üîπ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
        status_text = st.empty()
        if st.button("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô KML"):
            save_folder, saved_files = convert_excel_to_kml(uploaded_file, sheet_name, base_folder)

            if saved_files:
                st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå KML ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà `{save_folder}`")
                
                # üîπ ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                st.write(f"üìÇ **‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:** `{save_folder}`")

                # üîπ ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                for filename in saved_files:
                    st.write(f"üìå `{filename}`")
    except Exception as e:
        st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå: {e}")
